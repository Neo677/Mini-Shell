Git hub

git branch [NOM_DE_LA_BRANCHE] = creer une nouvelle branche
git checkout [NOM_DE_LA_BRANCHE] = permet de se placer sur la branche
git merge [NOM_DE_LA_BRANCHE] = fusionne la branche actuel avec celle passer en parametre
git rebase [NOM_DE_LA_BRANCHE] = permet de fussionner la branche actuel dans la branche cible


Placement :

HEAD =  position actuel dans l'arbre


Commit relatif :

git checkout [NOM_DE_LA_BRANCHE ou DU_COMMIT]^ = revenir d'un commit en arriere
git checkout [NOM_DE_LA_BRANCHE ou DU_COMMIT]~NUM = revenir NUM commit en arriere


Deplacement :

git branch -f [NOM_DE_LA_BRANCHE] HEAD[~NUM ou ^] = deplace la branche de un ou plusieurs commit en ariere
git branch -f [NOM_DE_LA_BRANCHE] [CIBLE] = deplace la branche vers la cible

git reset HEAD^ = permet de faire un ctrl-z
git revert HEAD = annule les changement d'un git remote en creant un nouveau commit sans les modifications precedentes


Copie :

git cherry-pick <Commit1> <Commit2> <...> = creer des copies des commits par rapport a la position de HEAD
git rebase -i [CIBLE] = permet de faire une copie des commit a l'emplacement cible
git commit --amend creer une copie du commit actuel au meme niveau 